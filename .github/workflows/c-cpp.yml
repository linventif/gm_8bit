name: Build

on:
    push:
        branches: [master]
    workflow_dispatch:

jobs:
    build-linux:
        runs-on: ubuntu-22.04
        steps:
            - name: Start build-linux
              run: echo "üõ†Ô∏è  Lancement du build Linux..."

            - name: Checkout main repo
              uses: actions/checkout@v2

            - name: Checkout garrysmod_common submodule
              uses: actions/checkout@v2
              with:
                  repository: danielga/garrysmod_common
                  ref: x86-64-support-sourcesdk
                  submodules: recursive
                  path: garrysmod_common

            - name: Install Premake & d√©pendances
              run: |
                  echo "üì•  T√©l√©chargement de Premake..."
                  wget https://github.com/premake/premake-core/releases/download/v5.0.0-beta2/premake-5.0.0-beta2-linux.tar.gz -O premake.tar.gz
                  tar -xzf premake.tar.gz
                  chmod +x premake5
                  sudo mv premake5 /usr/local/bin/
                  echo "üîß  Mise √† jour des paquets..."
                  sudo apt-get update
                  sudo apt-get install -y g++-multilib
                  gcc --version

            - name: G√©n√©ration du projet avec Premake
              run: |
                  echo "üìê  G√©n√©ration des makefiles..."
                  premake5 --gmcommon=garrysmod_common gmake

            - name: Compilation Linux
              run: |
                  echo "üèóÔ∏è  Compilation..."
                  cd projects/linux/gmake
                  make
                  make config=releasewithsymbols_x86_64

            - name: Upload artifacts Linux (x86)
              uses: actions/upload-artifact@v4
              with:
                  name: gmsv_eightbit_linux.dll
                  path: projects/linux/gmake/x86/ReleaseWithSymbols/gmsv_eightbit_linux.dll

            - name: Upload artifacts Linux (x86_64)
              uses: actions/upload-artifact@v4
              with:
                  name: gmsv_eightbit_linux64.dll
                  path: projects/linux/gmake/x86_64/ReleaseWithSymbols/gmsv_eightbit_linux64.dll

    build-windows:
        runs-on: windows-2022
        steps:
            - name: Checkout main repo
              uses: actions/checkout@v2

            - name: Checkout garrysmod_common submodule
              uses: actions/checkout@v2
              with:
                  repository: danielga/garrysmod_common
                  ref: x86-64-support-sourcesdk
                  submodules: recursive
                  path: garrysmod_common

            - name: Install Premake
              run: |
                  curl -L https://github.com/premake/premake-core/releases/download/v5.0.0-beta2/premake-5.0.0-beta2-windows.zip -o premake.zip
                  Expand-Archive premake.zip -DestinationPath premake

            - name: Add Premake to PATH
              shell: pwsh
              run: |
                  "$Env:GITHUB_WORKSPACE\premake" | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf8 -Append

            - name: Generate Project
              run: |
                  premake5.exe --gmcommon=garrysmod_common vs2022

            - name: Build Win32
              run: |
                  cd projects/windows/vs2022
                  & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe" `
                    /p:Configuration=ReleaseWithSymbols `
                    /p:Platform=Win32 eightbit.sln

            - name: Upload artifact Win32
              uses: actions/upload-artifact@v4
              with:
                  name: gmsv_eightbit_windows.dll
                  path: projects/windows/vs2022/x86/ReleaseWithSymbols/gmsv_eightbit_win32.dll

            - name: Build x64
              run: |
                  cd projects/windows/vs2022
                  & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe" `
                    /p:Configuration=ReleaseWithSymbols `
                    /p:Platform=x64 eightbit.sln

            - name: Upload artifact x64
              uses: actions/upload-artifact@v4
              with:
                  name: gmsv_eightbit_win64.dll
                  path: projects/windows/vs2022/x86_64/ReleaseWithSymbols/gmsv_eightbit_win64.dll

    release:
        name: Publish Release
        needs:
            - build-linux
            - build-windows
        runs-on: ubuntu-latest
        steps:
            - name: Download all build artifacts
              uses: actions/download-artifact@v4
              with:
                  # sans `name`, t√©l√©charge tous les artefacts
                  path: release

            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v${{ github.run_number }}
                  release_name: Build ${{ github.run_number }}
                  body: |
                      üöÄ Build automatis√©  
                      Artifacts pour Linux et Windows.
                  draft: false
                  prerelease: false

            - name: Upload Linux 32‚Äëbit DLL
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: release/gmsv_eightbit_linux.dll
                  asset_name: gmsv_eightbit_linux.dll
                  asset_content_type: application/octet-stream

            - name: Upload Linux 64‚Äëbit DLL
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: release/gmsv_eightbit_linux64.dll
                  asset_name: gmsv_eightbit_linux64.dll
                  asset_content_type: application/octet-stream

            - name: Upload Windows 32‚Äëbit DLL
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: release/gmsv_eightbit_windows.dll
                  asset_name: gmsv_eightbit_windows.dll
                  asset_content_type: application/octet-stream

            - name: Upload Windows 64‚Äëbit DLL
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: release/gmsv_eightbit_win64.dll
                  asset_name: gmsv_eightbit_win64.dll
                  asset_content_type: application/octet-stream
